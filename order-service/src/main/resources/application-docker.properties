## application properties file for profile: 'docker', obtained from env variable: SPRING_PROFILES_ACTIVE=docker
## Contains properties for services which are running inside a container, specified in docker-compose.yml. 
## Difference between regular application.properties and this file is that here, all URIs will point to specific docker container name (E.g. order service - http://order-service:8081) rather than localhost (http://localhost:8081)

## Add service names to the computer's hostname: C:\\Windows\\System32\\drivers\\etc\\hosts
##		127.0.0.1 keycloak
##		127.0.0.1 zipkin
##		127.0.0.1 mongo
##		127.0.0.1 postgres-order
##		127.0.0.1 postgres-inventory
##		127.0.0.1 broker
##		127.0.0.1 discovery-server

eureka.client.serviceUrl.defaultZone=http://eureka:password@discovery-server:8761/eureka
spring.zipkin.base-url=http://zipkin:9411
management.zipkin.tracing.endpoint=http://zipkin:9411

# In the below URI, instead of port:9092, 29092 is used, whenever 2 kafka broker instances inside docker containers need to communicate with each other
# This is because of kafka properties specified in docker-compose.yml, KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
spring.kafka.bootstrap-servers=broker:29092

# Instead of MySQL, Postgresql DB is used in docker container for order-service, specified in docker-compose.yml. It's running on port 5431
spring.datasource.url=jdbc:postgresql://postgres-order:5431/order_db
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
